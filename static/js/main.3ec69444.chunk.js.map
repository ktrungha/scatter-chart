{"version":3,"sources":["components/ScatterChart.js","App.js","serviceWorker.js","index.js"],"names":["DATA_POINT_TYPE_CIRCLE","DATA_POINT_TYPE_SQUARE","DATA_POINT_TYPE_TRIANGLE","DATA_POINT_TYPE_DIAMOND","Container","styled","div","_templateObject","YLabelDiv","_templateObject2","props","concat","height","YAxisDiv","_templateObject3","convertX","x","minX","maxX","viewBoxMaxX","convertY","y","minY","maxY","DataPoint","_ref","type","color","onClick","react_default","a","createElement","draggable","cx","cy","r","fill","style","filter","points","size","triangleSize","SelectionRectangle","_ref2","pos","rectangleX1","rectangleX2","rectangleY1","rectangleY2","userSelect","position","top","Math","min","left","width","abs","backgroundColor","opacity","defaultProps","undefined","ScatterChart","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","svgContainer","React","createRef","extra","state","mouseDown","bind","assertThisInitialized","mouseMove","throttle","trailing","mouseUp","current","addEventListener","removeEventListener","clientX","_ref3","clientY","domRec","getBoundingClientRect","setState","drawing","_ref4","_ref5","_this$state","convertData","onSelect","container","lowerBoundX","upperBoundX","max","lowerBoundY","upperBoundY","dataPoint","map","key","_this2","_this$props","xLabel","yLabel","aspectRatio","title","xSteps","ySteps","_this$state2","display","flexDirection","justifyContent","marginRight","toConsumableArray","Array","keys","v","ref","viewBox","id","dx","dy","stdDeviation","x1","y1","x2","y2","strokeWidth","stroke","transform","marginTop","data","_data$reduce","reduce","_ref6","_ref7","currentMinX","currentMaxX","currentMinY","currentMaxY","retval","PureComponent","colors","Input","input","App_templateObject","Field","App_templateObject2","App","count","selectedKeys","padding","textAlign","margin","alignItems","value","onChange","event","Number","parseFloat","target","randomData","index","round","random","floor","components_ScatterChart","indexOf","marginLeft","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3ec69444.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { throttle } from 'lodash';\n\nconst DATA_POINT_TYPE_CIRCLE = 'circle';\nconst DATA_POINT_TYPE_SQUARE = 'square';\nconst DATA_POINT_TYPE_TRIANGLE = 'triangle';\nconst DATA_POINT_TYPE_DIAMOND = 'diamond';\n\nconst Container = styled.div`\n  width: fit-content;\n  height: fit-content;\n`;\n\nconst YLabelDiv = styled.div`\n  display: flex;\n  align-items: center;\n  height: ${props => `${props.height}px`};\n`;\n\nconst YAxisDiv = styled.div`\n  margin-right: 10px;\n  display: flex;\n  flex-direction: column-reverse;\n  align-items: flex-end;\n  justify-content: space-between;\n  height: 100%;\n`;\n\nfunction convertX(x, minX, maxX, viewBoxMaxX) {\n  return ((x - minX) / (maxX - minX)) * viewBoxMaxX;\n}\n\nfunction convertY(y, minY, maxY) {\n  return 100 - ((y - minY) / (maxY - minY)) * 100;\n}\n\nfunction convertType(type) {\n  if (type === 0) {\n    return DATA_POINT_TYPE_CIRCLE;\n  }\n  if (type === 1) {\n    return DATA_POINT_TYPE_SQUARE;\n  }\n  if (type === 2) {\n    return DATA_POINT_TYPE_TRIANGLE;\n  }\n  if (type === 3) {\n    return DATA_POINT_TYPE_DIAMOND;\n  }\n  return null;\n}\n\nfunction DataPoint({\n  type, x, y, color, onClick,\n}) {\n  const size = 2;\n  if (type === DATA_POINT_TYPE_CIRCLE) {\n    return (\n      <circle\n        draggable={false}\n        cx={x}\n        cy={y}\n        r={size}\n        fill={color}\n        onClick={onClick}\n        style={{ filter: 'url(#shadow)' }}\n      />\n    );\n  }\n  if (type === DATA_POINT_TYPE_SQUARE) {\n    return (\n      <polygon\n        draggable={false}\n        points={`${x - size} ${y - size}, ${x + size} ${y - size}, ${x\n          + size} ${y + size}, ${x - size} ${y + size}`}\n        fill={color}\n        onClick={onClick}\n        style={{ filter: 'url(#shadow)' }}\n      />\n    );\n  }\n  if (type === DATA_POINT_TYPE_TRIANGLE) {\n    const triangleSize = size * 1.5;\n    return (\n      <polygon\n        draggable={false}\n        points={`${x} ${y - triangleSize}, ${x + triangleSize * 0.866} ${y + triangleSize * 0.5}, ${x - triangleSize * 0.866} ${y + triangleSize * 0.5}`}\n        fill={color}\n        onClick={onClick}\n        style={{ filter: 'url(#shadow)' }}\n      />\n    );\n  }\n  if (type === DATA_POINT_TYPE_DIAMOND) {\n    return (\n      <polygon\n        draggable={false}\n        points={`${x} ${y - 2 * size * 0.707}, ${x + 2 * size * 0.707} ${y}, ${x} ${y + 2 * size * 0.707}, ${x - 2 * size * 0.707} ${y}`}\n        fill={color}\n        onClick={onClick}\n        style={{ filter: 'url(#shadow)' }}\n      />\n    );\n  }\n  return <div />;\n}\n\nDataPoint.defaultProps = {\n  color: '#e0a31f',\n  onClick: undefined,\n};\n\nDataPoint.propTypes = {\n  type: PropTypes.string.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  color: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nfunction SelectionRectangle({ pos }) {\n  const {\n    rectangleX1, rectangleX2, rectangleY1, rectangleY2,\n  } = pos;\n  if (!rectangleX1 || !rectangleX2 || !rectangleY1 || !rectangleY2) {\n    return <div />;\n  }\n  return (\n    <div\n      draggable={false}\n      style={{\n        userSelect: 'none',\n        position: 'absolute',\n        top: Math.min(rectangleY1, rectangleY2),\n        left: Math.min(rectangleX1, rectangleX2),\n        width: Math.abs(rectangleX1 - rectangleX2),\n        height: Math.abs(rectangleY1 - rectangleY2),\n        backgroundColor: 'grey',\n        opacity: 0.2,\n      }}\n    />\n  );\n}\n\nSelectionRectangle.propTypes = {\n  pos: PropTypes.shape({}).isRequired,\n};\n\nclass ScatterChart extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.svgContainer = React.createRef();\n    this.extra = 4;\n\n    this.state = {};\n    this.mouseDown = this.mouseDown.bind(this);\n    this.mouseMove = throttle(this.mouseMove.bind(this), 100, {\n      trailing: true,\n    });\n    this.mouseUp = this.mouseUp.bind(this);\n  }\n\n  static getDerivedStateFromProps(props) {\n    const { data, aspectRatio } = props;\n    const {\n      minX, maxX, minY, maxY,\n    } = data.reduce(\n      (\n        {\n          minX: currentMinX,\n          maxX: currentMaxX,\n          minY: currentMinY,\n          maxY: currentMaxY,\n        },\n        { x, y },\n      ) => {\n        const retval = {};\n        if (currentMinX === undefined || currentMinX > x) {\n          retval.minX = x;\n        } else {\n          retval.minX = currentMinX;\n        }\n        if (currentMaxX === undefined || currentMaxX < x) {\n          retval.maxX = x;\n        } else {\n          retval.maxX = currentMaxX;\n        }\n        if (currentMinY === undefined || currentMinY > y) {\n          retval.minY = y;\n        } else {\n          retval.minY = currentMinY;\n        }\n        if (currentMaxY === undefined || currentMaxY < y) {\n          retval.maxY = y;\n        } else {\n          retval.maxY = currentMaxY;\n        }\n        return retval;\n      },\n      {},\n    );\n    const viewBoxMaxX = 100 * aspectRatio;\n\n    const convertData = data.map(dataPoint => ({\n      x: convertX(dataPoint.x, minX, maxX, viewBoxMaxX),\n      y: convertY(dataPoint.y, minY, maxY),\n      key: dataPoint.key,\n      type: dataPoint.type,\n      color: dataPoint.color,\n    }));\n\n    return {\n      minX, maxX, minY, maxY, convertData, viewBoxMaxX,\n    };\n  }\n\n  componentDidMount() {\n    this.svgContainer.current.addEventListener('mousedown', this.mouseDown);\n    this.svgContainer.current.addEventListener('mousemove', this.mouseMove);\n    this.svgContainer.current.addEventListener('mouseup', this.mouseUp);\n  }\n\n  componentWillUnmount() {\n    this.svgContainer.current.removeEventListener('mousedown', this.mouseDown);\n    this.svgContainer.current.removeEventListener('mousemove', this.mouseMove);\n    this.svgContainer.current.removeEventListener('mouseup', this.mouseUp);\n  }\n\n  mouseDown({ clientX, clientY }) {\n    const domRec = this.svgContainer.current.getBoundingClientRect();\n    this.setState({\n      rectangleX1: clientX - domRec.x,\n      rectangleY1: clientY - domRec.y,\n      rectangleX2: undefined,\n      rectangleY2: undefined,\n      drawing: true,\n    });\n  }\n\n  mouseMove({ clientX, clientY }) {\n    const domRec = this.svgContainer.current.getBoundingClientRect();\n    const { drawing } = this.state;\n    if (drawing) {\n      this.setState({\n        rectangleX2: clientX - domRec.x,\n        rectangleY2: clientY - domRec.y,\n      });\n    }\n  }\n\n  mouseUp({ clientX, clientY }) {\n    const {\n      rectangleX1, rectangleY1, convertData, viewBoxMaxX,\n    } = this.state;\n    const { onSelect } = this.props;\n\n    const container = this.svgContainer.current.getBoundingClientRect();\n    const rectangleX2 = clientX - container.x;\n    const rectangleY2 = clientY - container.y;\n    if (rectangleX1 !== rectangleX2 && rectangleY1 !== rectangleY2) {\n      this.setState({\n        rectangleX2,\n        rectangleY2,\n        drawing: false,\n      });\n      if (onSelect) {\n        const lowerBoundX = (Math.min(rectangleX1, rectangleX2) / container.width)\n          * (this.extra * 2 + viewBoxMaxX) - this.extra;\n        const upperBoundX = (Math.max(rectangleX1, rectangleX2) / container.width)\n          * (this.extra * 2 + viewBoxMaxX) - this.extra;\n        const lowerBoundY = (Math.min(rectangleY1, rectangleY2) / container.height)\n          * (this.extra * 2 + 100) - this.extra;\n        const upperBoundY = (Math.max(rectangleY1, rectangleY2) / container.height)\n          * (this.extra * 2 + 100) - this.extra;\n        const selectedKeys = convertData\n          .filter(\n            dataPoint => lowerBoundX < dataPoint.x && dataPoint.x < upperBoundX\n              && lowerBoundY < dataPoint.y && dataPoint.y < upperBoundY,\n          )\n          .map(dataPoint => dataPoint.key);\n        onSelect(selectedKeys);\n      }\n    } else {\n      this.setState({\n        rectangleX2: undefined,\n        rectangleY2: undefined,\n        drawing: false,\n      });\n    }\n  }\n\n  render() {\n    const {\n      xLabel,\n      yLabel,\n      aspectRatio,\n      height,\n      title,\n      xSteps,\n      ySteps,\n    } = this.props;\n    const width = height * aspectRatio;\n\n    const {\n      rectangleX1,\n      rectangleX2,\n      rectangleY1,\n      rectangleY2,\n      viewBoxMaxX,\n      minX,\n      maxX,\n      minY,\n      maxY,\n      convertData,\n    } = this.state;\n\n    return (\n      <Container>\n        <div style={{ display: 'flex', flexDirection: 'row-reverse' }}>\n          <div\n            style={{\n              width: `${width}px`,\n              display: 'flex',\n              justifyContent: 'center',\n            }}\n          >\n            {title}\n          </div>\n        </div>\n        <div style={{ display: 'flex' }}>\n          <YLabelDiv height={height}>\n            <div style={{ marginRight: '10px' }}>{yLabel}</div>\n            <YAxisDiv>\n              {[...Array(ySteps + 1).keys()].map(v => (\n                <div key={v}>{minY + (v * (maxY - minY)) / ySteps}</div>\n              ))}\n            </YAxisDiv>\n          </YLabelDiv>\n          <div\n            draggable={false}\n            style={{\n              userSelect: 'none',\n              height: `${height}px`,\n              width: `${width}px`,\n              position: 'relative',\n            }}\n            ref={this.svgContainer}\n          >\n            <svg\n              draggable={false}\n              viewBox={`${0 - this.extra} ${0 - this.extra} ${viewBoxMaxX + this.extra * 2} ${100 + this.extra * 2}`}\n            >\n              <defs>\n                <filter id=\"shadow\" y=\"-40%\" height=\"180%\" x=\"-40%\" width=\"180%\">\n                  <feDropShadow dx=\"0\" dy=\"0\" stdDeviation=\"0.5\" />\n                </filter>\n              </defs>\n              {[...Array(ySteps + 1).keys()].map(v => (\n                <line\n                  draggable={false}\n                  key={v}\n                  x1=\"0\"\n                  y1={(v * 100) / ySteps}\n                  x2={viewBoxMaxX}\n                  y2={(v * 100) / ySteps}\n                  strokeWidth={0.25}\n                  stroke=\"#aaacaf\"\n                />\n              ))}\n              {[...Array(xSteps + 1).keys()].map(v => (\n                <line\n                  draggable={false}\n                  key={v}\n                  y1=\"0\"\n                  x1={(v * viewBoxMaxX) / xSteps}\n                  y2=\"100\"\n                  x2={(v * viewBoxMaxX) / xSteps}\n                  strokeWidth={0.25}\n                  stroke=\"#aaacaf\"\n                />\n              ))}\n              {convertData.map(dataPoint => (\n                <DataPoint\n                  key={dataPoint.key}\n                  type={convertType(dataPoint.type)}\n                  x={dataPoint.x}\n                  y={dataPoint.y}\n                  color={dataPoint.color}\n                />\n              ))}\n            </svg>\n            {\n              <SelectionRectangle\n                pos={{\n                  rectangleX1, rectangleX2, rectangleY1, rectangleY2,\n                }}\n              />\n            }\n            {\n              [...Array(xSteps + 1).keys()].map(v => (\n                <div\n                  style={{\n                    position: 'absolute',\n                    top: height,\n                    left: ((v * viewBoxMaxX) / xSteps + this.extra) / (this.extra * 2 + viewBoxMaxX)\n                      * height * aspectRatio,\n                    transform: 'translateX(-50%)',\n                  }}\n                  key={`${v}-label`}\n                >\n                  {minX + (v * (maxX - minX)) / xSteps}\n                </div>\n              ))\n            }\n          </div>\n        </div>\n        <div style={{ display: 'flex', flexDirection: 'row-reverse' }}>\n          <div style={{ width: `${width}px` }}>\n            <div\n              style={{\n                marginTop: '25px',\n                display: 'flex',\n                justifyContent: 'center',\n              }}\n            >\n              {xLabel}\n            </div>\n          </div>\n        </div>\n      </Container>\n    );\n  }\n}\n\nScatterChart.defaultProps = {\n  aspectRatio: 1,\n  height: 300,\n  xSteps: 10,\n  ySteps: 10,\n  data: [],\n  onSelect: undefined,\n};\n\nScatterChart.propTypes = {\n  aspectRatio: PropTypes.number,\n  height: PropTypes.number,\n  title: PropTypes.string.isRequired,\n  xLabel: PropTypes.string.isRequired,\n  yLabel: PropTypes.string.isRequired,\n  xSteps: PropTypes.number,\n  ySteps: PropTypes.number,\n  onSelect: PropTypes.func,\n};\n\nexport default ScatterChart;\n","import React from 'react';\nimport styled from 'styled-components';\nimport ScatterChart from './components/ScatterChart';\n\nconst colors = ['#ff5722', '#2196f3', '#4caf50', '#673ab7'];\n\nconst Input = styled.input`\n  width: 100px;\n  padding: 3px;\n`;\n\nconst Field = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  margin: 10px;\n`;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      minX: 0,\n      minY: 0,\n      maxX: 100,\n      maxY: 100,\n      count: 20,\n      data: [],\n    };\n\n    this.onSelect = this.onSelect.bind(this);\n  }\n\n  onSelect(keys) {\n    this.setState({ selectedKeys: keys });\n  }\n\n  render() {\n    const {\n      minX,\n      maxX,\n      minY,\n      maxY,\n      count,\n      selectedKeys,\n      data,\n    } = this.state;\n    return (\n      <div style={{ padding: '10px' }}>\n        <div style={{ textAlign: 'center', margin: '10px' }}>\n          This is a scatter chart where you can draw rectangle to select data\n          points\n        </div>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'flex-start',\n            justifyContent: 'center',\n            width: 'fit-content',\n            margin: 'auto',\n          }}\n        >\n          <div\n            style={{\n              width: '300px',\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n            }}\n          >\n            <div style={{ textAlign: 'center', margin: '20px' }}>\n              Generate data\n            </div>\n            <Field>\n              Number of points:\n              {' '}\n              <Input\n                value={count}\n                type=\"number\"\n                onChange={event => this.setState({\n                  count: Number.parseFloat(event.target.value),\n                })\n                }\n              />\n            </Field>\n            <Field>\n              min X:\n              {' '}\n              <Input\n                value={minX}\n                type=\"number\"\n                onChange={event => this.setState({\n                  minX: Number.parseFloat(event.target.value),\n                })\n                }\n              />\n            </Field>\n            <Field>\n              max X:\n              {' '}\n              <Input\n                value={maxX}\n                type=\"number\"\n                onChange={event => this.setState({\n                  maxX: Number.parseFloat(event.target.value),\n                })\n                }\n              />\n            </Field>\n            <Field>\n              min Y:\n              {' '}\n              <Input\n                value={minY}\n                type=\"number\"\n                onChange={event => this.setState({\n                  minY: Number.parseFloat(event.target.value),\n                })\n                }\n              />\n            </Field>\n            <Field>\n              max Y:\n              {' '}\n              <Input\n                value={maxY}\n                type=\"number\"\n                onChange={event => this.setState({\n                  maxY: Number.parseFloat(event.target.value),\n                })\n                }\n              />\n            </Field>\n            <div style={{ textAlign: 'center', margin: '20px' }}>\n              <button\n                type=\"submit\"\n                onClick={() => {\n                  const randomData = [...Array(count).keys()].map(index => ({\n                    key: index,\n                    x: Math.round(Math.random() * (maxX - minX) + minX),\n                    y: Math.round(Math.random() * (maxY - minY) + minY),\n                    type: Math.floor(Math.random() * 4),\n                    color: colors[Math.floor(Math.random() * 4)],\n                  }));\n                  this.setState({ data: randomData });\n                }}\n              >\n                Generate\n              </button>\n            </div>\n          </div>\n          <div\n            style={{\n              padding: '25px',\n            }}\n          >\n            <ScatterChart\n              title=\"Chart title\"\n              xLabel=\"X\"\n              yLabel=\"Y\"\n              height={400}\n              aspectRatio={1}\n              xSteps={5}\n              ySteps={5}\n              data={data}\n              onSelect={this.onSelect}\n            />\n          </div>\n          <div\n            style={{\n              width: '400px',\n              padding: '15px',\n            }}\n          >\n            <div>Selected Points:</div>\n            {selectedKeys\n              && data\n                .filter(value => selectedKeys.indexOf(value.key) !== -1)\n                .map((value) => {\n                  const { x, y, key } = value;\n                  return (\n                    <div key={key}>\n                      x:\n                      {x}\n                      ; y:\n                      {y}\n                      ; key:\n                      {key}\n                    </div>\n                  );\n                })}\n          </div>\n        </div>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <div>Data points:</div>\n          {data.map(dataPoint => (\n            <div style={{ margin: '5px' }}>\n              x:\n              {' '}\n              <Input\n                value={dataPoint.x}\n                type=\"number\"\n                onChange={(event) => {\n                  data[dataPoint.key].x = Number.parseFloat(event.target.value);\n                  this.setState({ data });\n                }}\n              />\n              {' '}\n              &nbsp; y:\n              {' '}\n              <Input\n                value={dataPoint.y}\n                type=\"number\"\n                onChange={(event) => {\n                  data[dataPoint.key].y = Number.parseFloat(event.target.value);\n                  this.setState({ data });\n                }}\n              />\n              {' '}\n              &nbsp; key:\n              {dataPoint.key}\n              ,&nbsp;\n              color:\n              <span style={{\n                marginLeft: '5px', width: '10px', height: '10px', display: 'inline-block', backgroundColor: dataPoint.color,\n              }}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}